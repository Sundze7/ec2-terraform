name: Provision EC2 and Deploy Next.js App

on:
  push:
    branches:
      - master

jobs:
  terraform-apply:
    name: Provision EC2 and Deploy Application
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Terraform Repository
      - name: Checkout Terraform Repository
        uses: actions/checkout@v3

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      # Step 3: Initialize Terraform
      - name: Terraform Init
        working-directory: terraform/
        run: terraform init

      # Step 4: Apply Terraform
      - name: Terraform Apply
        working-directory: terraform/
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

       # Step 5: Save Private Key
      - name: Save Private Key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # # Step 6: Get EC2 Public IP
      # - name: Get EC2 Public IP
      #   id: get-ec2-ip
      #   working-directory: terraform/
      #   run: |
      #     echo "::set-output name=public_ip::$(terraform output -raw ec2_public_ip)"

      # # Debugging Step: Print the EC2 Public IP
      # - name: Debug EC2 IP
      #   run: |
      #     echo "EC2 IP: ${{ steps.get-ec2-ip.outputs.public_ip }}"

      # Step 6: Get EC2 Public IP and Set it as an Env Variable
      - name: Get EC2 Public IP
        id: get-ec2-ip
        run: |
          EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_PUBLIC_IP=${EC2_PUBLIC_IP}" >> $GITHUB_ENV

      # Debug EC2 IP
      - name: Debug EC2 IP
        run: |
          echo "EC2 IP: ${{ env.EC2_PUBLIC_IP }}"

      # Step 7: Deploy Application
      - name: Deploy Application
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ steps.get-ec2-ip.outputs.public_ip }} << 'EOF'
          # Update and install dependencies
          sudo apt update
          sudo apt install -y nodejs npm git

          # Clone application repository
          mkdir -p /var/www/nextjs-app
          cd /var/www/nextjs-app
          echo "${{ secrets.APP_DEPLOY_KEY }}" > /tmp/deploy-key
          chmod 600 /tmp/deploy-key
          GIT_SSH_COMMAND="ssh -i /tmp/deploy-key -o StrictHostKeyChecking=no" git clone git@github.com:stellatech-ca/marketup.git .

          # Navigate to the app and build
          cd app
          npm install
          npm run build

          # Install PM2 and start the application
          npm install pm2 -g
          pm2 start npm -- start
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          APP_DEPLOY_KEY: ${{ secrets.APP_DEPLOY_KEY }}
