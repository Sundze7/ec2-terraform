name: Provision EC2 and Deploy Next.js App

# on:
#   workflow_dispatch:

on:
  push:
    branches:
      - master

jobs:
  trigger_workflow:
    name: Provision EC2 and Deploy Application
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Terraform Repository
      # - name: Checkout Terraform Repository
      #   uses: actions/checkout@v3

      # # - name: Inject GitHub Runner Token into User Data
      # #   id: inject-token
      # #   run: |
      # #     sed -i "s/{{GH_RUNNER_TOKEN}}/${{ secrets.GH_RUNNER_TOKEN }}/g" install.sh



      # # Step 2: Setup Terraform
      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.6.0

      # # Initialize Terraform
      # - name: Terraform Init
      #   working-directory: terraform/
      #   run: terraform init

      # # Apply Terraform
      # - name: Terraform Apply
      #   working-directory: terraform/
      #   run: terraform apply -auto-approve
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Checkout Front-End Repo
        uses: actions/checkout@v3
        with:
          repository: stellatech-ca/marketup 
          token: ${{secrets.GH_PAT}}
          ref: feat/biz-overview

      
      - name: Install Node.js Dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install

      # Install Trivy for scanning
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.29.0/trivy_0.29.0_Linux-x86_64.deb
          sudo dpkg -i trivy_0.29.0_Linux-x86_64.deb
          

      - name: Trivy FS scan
        run: |
          trivy fs --format table -o fs.html .


      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-2

      # - name: Log in to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build Docker Image # v1 - image tag
      #   run: |
      #     docker build -t market-web:v1 .

      # - name: Tag Docker Image
      #   run: |
      #     docker tag market-web:v1 ${{ secrets.ECR_REGISTRY_URL }}/market-web:v1

      # - name: Push Docker Image to ECR
      #   run: |
      #     docker push ${{ secrets.ECR_REGISTRY_URL }}/market-web:v1

                

     
  